<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.22.0212.1521                               -->
<workbook original-version='18.1' source-build='2021.1.12 (20211.22.0212.1521)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.ParameterDefaultValues.true...ParameterDefaultValues />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top 10 Avg' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.32800000000000001'>
        <calculation class='tableau' formula='0.32800000000000001' />
        <range max='0.5' min='0.3' />
      </column>
      <column caption='Expand or Collapse' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Collapse&quot;'>
        <calculation class='tableau' formula='&quot;Collapse&quot;' />
        <members>
          <member value='&quot;Expand&quot;' />
          <member value='&quot;Collapse&quot;' />
        </members>
      </column>
      <column _.fcp.ParameterDefaultValues.true...default-value-field='[Parameters].[Parameter 1]' caption='Top 25 by Batting Average Parameter' datatype='real' name='[Top 25 by Batting Average Parameter]' param-domain-type='list' role='measure' type='quantitative' value='0.32800000000000001'>
        <calculation class='tableau' formula='0.32800000000000001' />
        <members>
          <member value='0.0' />
          <member value='0.066000000000000003' />
          <member value='0.104' />
          <member value='0.11' />
          <member value='0.111' />
          <member value='0.114' />
          <member value='0.115' />
          <member value='0.11899999999999999' />
          <member value='0.123' />
          <member value='0.125' />
          <member value='0.127' />
          <member value='0.13' />
          <member value='0.13100000000000001' />
          <member value='0.13200000000000001' />
          <member value='0.13300000000000001' />
          <member value='0.13400000000000001' />
          <member value='0.13600000000000001' />
          <member value='0.13700000000000001' />
          <member value='0.13800000000000001' />
          <member value='0.14399999999999999' />
          <member value='0.14599999999999999' />
          <member value='0.151' />
          <member value='0.154' />
          <member value='0.156' />
          <member value='0.157' />
          <member value='0.158' />
          <member value='0.159' />
          <member value='0.16' />
          <member value='0.161' />
          <member value='0.16200000000000001' />
          <member value='0.16300000000000001' />
          <member value='0.16400000000000001' />
          <member value='0.16500000000000001' />
          <member value='0.16700000000000001' />
          <member value='0.16800000000000001' />
          <member value='0.16900000000000001' />
          <member value='0.17000000000000001' />
          <member value='0.17199999999999999' />
          <member value='0.17299999999999999' />
          <member value='0.17499999999999999' />
          <member value='0.17999999999999999' />
          <member value='0.183' />
          <member value='0.188' />
          <member value='0.189' />
          <member value='0.191' />
          <member value='0.192' />
          <member value='0.193' />
          <member value='0.19400000000000001' />
          <member value='0.19500000000000001' />
          <member value='0.19600000000000001' />
          <member value='0.19700000000000001' />
          <member value='0.19900000000000001' />
          <member value='0.20000000000000001' />
          <member value='0.20100000000000001' />
          <member value='0.20300000000000001' />
          <member value='0.20399999999999999' />
          <member value='0.20499999999999999' />
          <member value='0.20599999999999999' />
          <member value='0.20699999999999999' />
          <member value='0.20799999999999999' />
          <member value='0.20999999999999999' />
          <member value='0.21099999999999999' />
          <member value='0.21199999999999999' />
          <member value='0.21299999999999999' />
          <member value='0.214' />
          <member value='0.215' />
          <member value='0.216' />
          <member value='0.217' />
          <member value='0.218' />
          <member value='0.219' />
          <member value='0.22' />
          <member value='0.221' />
          <member value='0.222' />
          <member value='0.223' />
          <member value='0.224' />
          <member value='0.22500000000000001' />
          <member value='0.22600000000000001' />
          <member value='0.22700000000000001' />
          <member value='0.22800000000000001' />
          <member value='0.22900000000000001' />
          <member value='0.23000000000000001' />
          <member value='0.23100000000000001' />
          <member value='0.23200000000000001' />
          <member value='0.23300000000000001' />
          <member value='0.23400000000000001' />
          <member value='0.23499999999999999' />
          <member value='0.23599999999999999' />
          <member value='0.23699999999999999' />
          <member value='0.23799999999999999' />
          <member value='0.23899999999999999' />
          <member value='0.23999999999999999' />
          <member value='0.24099999999999999' />
          <member value='0.24199999999999999' />
          <member value='0.24299999999999999' />
          <member value='0.24399999999999999' />
          <member value='0.245' />
          <member value='0.246' />
          <member value='0.247' />
          <member value='0.248' />
          <member value='0.249' />
          <member value='0.25' />
          <member value='0.251' />
          <member value='0.252' />
          <member value='0.253' />
          <member value='0.254' />
          <member value='0.255' />
          <member value='0.25600000000000001' />
          <member value='0.25700000000000001' />
          <member value='0.25800000000000001' />
          <member value='0.25900000000000001' />
          <member value='0.26000000000000001' />
          <member value='0.26100000000000001' />
          <member value='0.26200000000000001' />
          <member value='0.26300000000000001' />
          <member value='0.26400000000000001' />
          <member value='0.26500000000000001' />
          <member value='0.26600000000000001' />
          <member value='0.26700000000000002' />
          <member value='0.26800000000000002' />
          <member value='0.26900000000000002' />
          <member value='0.27000000000000002' />
          <member value='0.27100000000000002' />
          <member value='0.27200000000000002' />
          <member value='0.27300000000000002' />
          <member value='0.27400000000000002' />
          <member value='0.27500000000000002' />
          <member value='0.27600000000000002' />
          <member value='0.27700000000000002' />
          <member value='0.27800000000000002' />
          <member value='0.27900000000000003' />
          <member value='0.28000000000000003' />
          <member value='0.28100000000000003' />
          <member value='0.28199999999999997' />
          <member value='0.28299999999999997' />
          <member value='0.28399999999999997' />
          <member value='0.28499999999999998' />
          <member value='0.28599999999999998' />
          <member value='0.28699999999999998' />
          <member value='0.28799999999999998' />
          <member value='0.28899999999999998' />
          <member value='0.28999999999999998' />
          <member value='0.29099999999999998' />
          <member value='0.29199999999999998' />
          <member value='0.29299999999999998' />
          <member value='0.29399999999999998' />
          <member value='0.29499999999999998' />
          <member value='0.29599999999999999' />
          <member value='0.29699999999999999' />
          <member value='0.29799999999999999' />
          <member value='0.29899999999999999' />
          <member value='0.30299999999999999' />
          <member value='0.30399999999999999' />
          <member value='0.30499999999999999' />
          <member value='0.30599999999999999' />
          <member value='0.307' />
          <member value='0.311' />
          <member value='0.32800000000000001' />
        </members>
      </column>
    </datasource>
    <datasource caption='baseball_data' inline='true' name='federated.0798afo1f5hh77105ib69168v5ty' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='baseball_data' name='textscan.0cb6k8507etfzd1bca1fu1wxordj'>
            <connection class='textscan' directory='C:/Users/chell/OneDrive/Documents/School/DataVisualization' filename='baseball_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0cb6k8507etfzd1bca1fu1wxordj' name='baseball_data.csv' table='[baseball_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='string' name='handedness' ordinal='1' />
            <column datatype='real' name='height' ordinal='2' />
            <column datatype='real' name='weight' ordinal='3' />
            <column datatype='real' name='avg' ordinal='4' />
            <column datatype='integer' name='HR' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0cb6k8507etfzd1bca1fu1wxordj' name='baseball_data.csv' table='[baseball_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='string' name='handedness' ordinal='1' />
            <column datatype='real' name='height' ordinal='2' />
            <column datatype='real' name='weight' ordinal='3' />
            <column datatype='real' name='avg' ordinal='4' />
            <column datatype='integer' name='HR' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[baseball_data.csv_82DDE8E520BA4DEDB109A2B48960AD66]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handedness</remote-name>
            <remote-type>129</remote-type>
            <local-name>[handedness]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>handedness</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[baseball_data.csv_82DDE8E520BA4DEDB109A2B48960AD66]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>height</remote-name>
            <remote-type>5</remote-type>
            <local-name>[height]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>height</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[baseball_data.csv_82DDE8E520BA4DEDB109A2B48960AD66]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[baseball_data.csv_82DDE8E520BA4DEDB109A2B48960AD66]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>avg</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[baseball_data.csv_82DDE8E520BA4DEDB109A2B48960AD66]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HR]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>HR</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[baseball_data.csv_82DDE8E520BA4DEDB109A2B48960AD66]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' caption='Height in Feet' datatype='real' name='[Calculation_1047368407190814724]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[height]/12' />
      </column>
      <column caption='Subset Labels' datatype='string' name='[Calculation_577305197516759040]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Top 25 by Batting Average]&#13;&#10;THEN &quot;Top 25 Batting Averages&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
        <aliases>
          <alias key='&quot;Top 25 Batting Averages&quot;' value='Top 10 Batting Averages' />
        </aliases>
      </column>
      <column caption='Names, Top 10' datatype='string' name='[Calculation_577305197519740929]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2]=&quot;Collapse&quot; THEN&#13;&#10;IF [Top 25 by Batting Average]&#13;&#10;THEN [name]&#13;&#10;ELSE &quot;Others&quot; END&#13;&#10;ELSE [name] END' />
      </column>
      <column aggregation='None' datatype='integer' name='[HR (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[HR]' peg='0' size='26.8' />
      </column>
      <column datatype='integer' name='[HR]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='baseball_data.csv' datatype='table' name='[__tableau_internal_object_id__].[baseball_data.csv_82DDE8E520BA4DEDB109A2B48960AD66]' role='measure' type='quantitative' />
      <column caption='Avg' datatype='real' name='[avg]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Handedness' datatype='string' default-role='measure' default-type='quantitative' name='[handedness]' role='dimension' type='nominal' />
      <column caption='Height' datatype='real' name='[height]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Weight' datatype='real' name='[weight]' role='measure' type='quantitative' />
      <column-instance column='[HR]' derivation='Avg' name='[avg:HR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weight]' derivation='Avg' name='[avg:weight:qk]' pivot='key' type='quantitative' />
      <column-instance column='[HR]' derivation='Count' name='[cnt:HR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weight]' derivation='Count' name='[cnt:weight:qk]' pivot='key' type='quantitative' />
      <column-instance column='[HR]' derivation='CountD' name='[ctd:HR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[name]' derivation='CountD' name='[ctd:name:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weight]' derivation='CountD' name='[ctd:weight:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Top 25 by Batting Average]' derivation='InOut' name='[io:Top 25 by Batting Average:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='false' value='Others' />
          <alias key='true' value='Top 10 Batting Average' />
        </aliases>
      </column-instance>
      <column-instance column='[Calculation_1047368407190814724]' derivation='None' name='[none:Calculation_1047368407190814724:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_577305197516759040]' derivation='None' name='[none:Calculation_577305197516759040:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_577305197519740929]' derivation='None' name='[none:Calculation_577305197519740929:nk]' pivot='key' type='nominal' />
      <column-instance column='[handedness]' derivation='None' name='[none:handedness:nk]' pivot='key' type='nominal' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1047368407190814724]' derivation='Sum' name='[sum:Calculation_1047368407190814724:qk]' pivot='key' type='quantitative' />
      <column-instance column='[HR]' derivation='Sum' name='[sum:HR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weight]' derivation='Sum' name='[sum:weight:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Handedness)' hidden='true' name='[Action (Handedness)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[handedness]' />
        </groupfilter>
      </group>
      <group caption='Action (Height in Feet,Subset Labels)' hidden='true' name='[Action (Height in Feet,Subset Labels)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1047368407190814724]' />
          <groupfilter function='level-members' level='[Calculation_577305197516759040]' />
        </groupfilter>
      </group>
      <group caption='Action (Height in Feet,Subset Labels,Names, Top 10)' hidden='true' name='[Action (Height in Feet,Subset Labels,Names, Top 10)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1047368407190814724]' />
          <groupfilter function='level-members' level='[Calculation_577305197516759040]' />
          <groupfilter function='level-members' level='[Calculation_577305197519740929]' />
        </groupfilter>
      </group>
      <group caption='Action (Names, Top 10)' hidden='true' name='[Action (Names, Top 10)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_577305197519740929]' />
        </groupfilter>
      </group>
      <group caption='Action (Names, Top 10,Handedness)' hidden='true' name='[Action (Names, Top 10,Handedness)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_577305197519740929]' />
          <groupfilter function='level-members' level='[handedness]' />
        </groupfilter>
      </group>
      <group caption='Action (Subset Labels,Names, Top 10)' hidden='true' name='[Action (Subset Labels,Names, Top 10)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_577305197516759040]' />
          <groupfilter function='level-members' level='[Calculation_577305197519740929]' />
        </groupfilter>
      </group>
      <group caption='Action (Subset Labels,Names, Top 25)' hidden='true' name='[Action (Subset Labels,Names, Top 25)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_577305197516759040]' />
          <groupfilter function='level-members' level='[Calculation_577305197519740929]' />
        </groupfilter>
      </group>
      <group caption='Action (Weight)' hidden='true' name='[Action (Weight)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[weight]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Height in Feet,Names, Top 10,Subset Labels)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_1047368407190814724:qk]' />
          <groupfilter function='level-members' level='[none:Calculation_577305197519740929:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_577305197516759040:nk]' />
        </groupfilter>
      </group>
      <group caption='Top 10 by Batting Average' name='[Top 25 by Batting Average]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([avg])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[name]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0798afo1f5hh77105ib69168v5ty].[avg:HR:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0798afo1f5hh77105ib69168v5ty].[cnt:HR:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0798afo1f5hh77105ib69168v5ty].[ctd:HR:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0798afo1f5hh77105ib69168v5ty].[ctd:name:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0798afo1f5hh77105ib69168v5ty].[sum:HR:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0798afo1f5hh77105ib69168v5ty].[sum:Calculation_1047368407190814724:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0798afo1f5hh77105ib69168v5ty].[avg:weight:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0798afo1f5hh77105ib69168v5ty].[cnt:weight:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0798afo1f5hh77105ib69168v5ty].[ctd:weight:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0798afo1f5hh77105ib69168v5ty].[sum:weight:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:name:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Don Buford&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Vic Davalillo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ron Brand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joe Morgan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Top 25 by Batting Average:nk]' palette='traffic_light_10_0' type='palette'>
            <map to='#b60a1c'>
              <bucket>true</bucket>
            </map>
            <map to='#bbc9e5'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:handedness:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;B&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;R&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;L&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_577305197516759040:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Top 25 Batting Averages&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Expand or Collapse' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Collapse&quot;'>
          <calculation class='tableau' formula='&quot;Collapse&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='baseball_data.csv' id='baseball_data.csv_82DDE8E520BA4DEDB109A2B48960AD66'>
            <properties context=''>
              <relation connection='textscan.0cb6k8507etfzd1bca1fu1wxordj' name='baseball_data.csv' table='[baseball_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='name' ordinal='0' />
                  <column datatype='string' name='handedness' ordinal='1' />
                  <column datatype='real' name='height' ordinal='2' />
                  <column datatype='real' name='weight' ordinal='3' />
                  <column datatype='real' name='avg' ordinal='4' />
                  <column datatype='integer' name='HR' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_18FC598AB08C48A09284B78859A5E43F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top 10 Batting Average Players' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Handedness Among Top 10 Batting Average Players'>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.0798afo1f5hh77105ib69168v5ty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expand or Collapse' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Collapse&quot;'>
              <calculation class='tableau' formula='&quot;Collapse&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0798afo1f5hh77105ib69168v5ty'>
            <column caption='Subset Labels' datatype='string' name='[Calculation_577305197516759040]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Top 25 by Batting Average]&#13;&#10;THEN &quot;Top 25 Batting Averages&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
              <aliases>
                <alias key='&quot;Top 25 Batting Averages&quot;' value='Top 10 Batting Averages' />
              </aliases>
            </column>
            <column caption='Names, Top 10' datatype='string' name='[Calculation_577305197519740929]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2]=&quot;Collapse&quot; THEN&#13;&#10;IF [Top 25 by Batting Average]&#13;&#10;THEN [name]&#13;&#10;ELSE &quot;Others&quot; END&#13;&#10;ELSE [name] END' />
            </column>
            <column caption='Avg' datatype='real' name='[avg]' role='measure' type='quantitative' />
            <column-instance column='[handedness]' derivation='CountD' name='[ctd:handedness:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Handedness' datatype='string' default-role='measure' default-type='quantitative' name='[handedness]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_577305197516759040]' derivation='None' name='[none:Calculation_577305197516759040:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_577305197519740929]' derivation='None' name='[none:Calculation_577305197519740929:nk]' pivot='key' type='nominal' />
            <column-instance column='[handedness]' derivation='None' name='[none:handedness:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0798afo1f5hh77105ib69168v5ty].[Action (Names, Top 10)]'>
            <groupfilter function='level-members' level='[Calculation_577305197519740929]' user:ui-action-filter='[Action1_18FC598AB08C48A09284B78859A5E43F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197516759040:nk]'>
            <groupfilter function='member' level='[none:Calculation_577305197516759040:nk]' member='&quot;Top 25 Batting Averages&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197516759040:nk]</column>
            <column>[federated.0798afo1f5hh77105ib69168v5ty].[Action (Names, Top 10)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' data-class='total' field='[federated.0798afo1f5hh77105ib69168v5ty].[ctd:handedness:qk]' value='15' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0798afo1f5hh77105ib69168v5ty].[ctd:handedness:qk]' />
              <text column='[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197519740929:nk]' />
              <color column='[federated.0798afo1f5hh77105ib69168v5ty].[none:handedness:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Names, Top 10:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197516759040:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Handedness:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0798afo1f5hh77105ib69168v5ty].[none:handedness:nk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BEB57796-2B68-4ACD-A3BA-E75B67F7D05E}' />
    </worksheet>
    <worksheet name='Height Among Top 10 Batting Average Players'>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.0798afo1f5hh77105ib69168v5ty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expand or Collapse' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Collapse&quot;'>
              <calculation class='tableau' formula='&quot;Collapse&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0798afo1f5hh77105ib69168v5ty'>
            <column aggregation='Sum' caption='Height in Feet' datatype='real' name='[Calculation_1047368407190814724]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[height]/12' />
            </column>
            <column caption='Subset Labels' datatype='string' name='[Calculation_577305197516759040]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Top 25 by Batting Average]&#13;&#10;THEN &quot;Top 25 Batting Averages&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
              <aliases>
                <alias key='&quot;Top 25 Batting Averages&quot;' value='Top 10 Batting Averages' />
              </aliases>
            </column>
            <column caption='Names, Top 10' datatype='string' name='[Calculation_577305197519740929]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2]=&quot;Collapse&quot; THEN&#13;&#10;IF [Top 25 by Batting Average]&#13;&#10;THEN [name]&#13;&#10;ELSE &quot;Others&quot; END&#13;&#10;ELSE [name] END' />
            </column>
            <column caption='Avg' datatype='real' name='[avg]' role='measure' type='quantitative' />
            <column caption='Height' datatype='real' name='[height]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1047368407190814724]' derivation='None' name='[none:Calculation_1047368407190814724:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_577305197516759040]' derivation='None' name='[none:Calculation_577305197516759040:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_577305197519740929]' derivation='None' name='[none:Calculation_577305197519740929:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0798afo1f5hh77105ib69168v5ty].[Action (Names, Top 10)]'>
            <groupfilter function='level-members' level='[Calculation_577305197519740929]' user:ui-action-filter='[Action1_18FC598AB08C48A09284B78859A5E43F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197516759040:nk]'>
            <groupfilter function='member' level='[none:Calculation_577305197516759040:nk]' member='&quot;Top 25 Batting Averages&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197519740929:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_577305197519740929:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197516759040:nk]</column>
            <column>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197519740929:nk]</column>
            <column>[federated.0798afo1f5hh77105ib69168v5ty].[Action (Names, Top 10)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197519740929:nk]' value='78' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197516759040:nk]' />
              <lod column='[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197519740929:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_1047368407190814724:qk]</rows>
        <cols>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197519740929:nk]</cols>
      </table>
      <simple-id uuid='{2097ED1D-46E8-4587-9FAD-28496B8A2B9F}' />
    </worksheet>
    <worksheet name='Top 10 Batting Average Players'>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.0798afo1f5hh77105ib69168v5ty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expand or Collapse' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Collapse&quot;'>
              <calculation class='tableau' formula='&quot;Collapse&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0798afo1f5hh77105ib69168v5ty'>
            <column caption='Subset Labels' datatype='string' name='[Calculation_577305197516759040]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Top 25 by Batting Average]&#13;&#10;THEN &quot;Top 25 Batting Averages&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
              <aliases>
                <alias key='&quot;Top 25 Batting Averages&quot;' value='Top 10 Batting Averages' />
              </aliases>
            </column>
            <column caption='Names, Top 10' datatype='string' name='[Calculation_577305197519740929]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2]=&quot;Collapse&quot; THEN&#13;&#10;IF [Top 25 by Batting Average]&#13;&#10;THEN [name]&#13;&#10;ELSE &quot;Others&quot; END&#13;&#10;ELSE [name] END' />
            </column>
            <column caption='Avg' datatype='real' name='[avg]' role='measure' type='quantitative' />
            <column-instance column='[Top 25 by Batting Average]' derivation='InOut' name='[io:Top 25 by Batting Average:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Others' />
                <alias key='true' value='Top 10 Batting Average' />
              </aliases>
            </column-instance>
            <column aggregation='CountD' caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_577305197516759040]' derivation='None' name='[none:Calculation_577305197516759040:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_577305197519740929]' derivation='None' name='[none:Calculation_577305197519740929:nk]' pivot='key' type='nominal' />
            <column-instance column='[avg]' derivation='Sum' name='[sum:avg:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0798afo1f5hh77105ib69168v5ty].[io:Top 25 by Batting Average:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>true</bucket>
              <bucket>false</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197516759040:nk]'>
            <groupfilter function='member' level='[none:Calculation_577305197516759040:nk]' member='&quot;Top 25 Batting Averages&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197516759040:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0798afo1f5hh77105ib69168v5ty].[sum:avg:qk]' value='n#,##0.000;-#,##0.000' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0798afo1f5hh77105ib69168v5ty].[io:Top 25 by Batting Average:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0798afo1f5hh77105ib69168v5ty].[io:Top 25 by Batting Average:nk]' />
              <text column='[federated.0798afo1f5hh77105ib69168v5ty].[sum:avg:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7031491994857788' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0798afo1f5hh77105ib69168v5ty].[io:Top 25 by Batting Average:nk] / [federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197519740929:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{45A74015-94AF-4550-A11D-B975C0BF4A2C}' />
    </worksheet>
    <worksheet name='Weight Among Top 10 Batting Average Players'>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.0798afo1f5hh77105ib69168v5ty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expand or Collapse' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Collapse&quot;'>
              <calculation class='tableau' formula='&quot;Collapse&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0798afo1f5hh77105ib69168v5ty'>
            <column caption='Subset Labels' datatype='string' name='[Calculation_577305197516759040]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Top 25 by Batting Average]&#13;&#10;THEN &quot;Top 25 Batting Averages&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
              <aliases>
                <alias key='&quot;Top 25 Batting Averages&quot;' value='Top 10 Batting Averages' />
              </aliases>
            </column>
            <column caption='Names, Top 10' datatype='string' name='[Calculation_577305197519740929]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2]=&quot;Collapse&quot; THEN&#13;&#10;IF [Top 25 by Batting Average]&#13;&#10;THEN [name]&#13;&#10;ELSE &quot;Others&quot; END&#13;&#10;ELSE [name] END' />
            </column>
            <column caption='Avg' datatype='real' name='[avg]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_577305197516759040]' derivation='None' name='[none:Calculation_577305197516759040:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_577305197519740929]' derivation='None' name='[none:Calculation_577305197519740929:nk]' pivot='key' type='nominal' />
            <column-instance column='[weight]' derivation='Sum' name='[sum:weight:ok]' pivot='key' type='ordinal' />
            <column caption='Weight' datatype='real' name='[weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0798afo1f5hh77105ib69168v5ty].[Action (Names, Top 10)]'>
            <groupfilter function='level-members' level='[Calculation_577305197519740929]' user:ui-action-filter='[Action1_18FC598AB08C48A09284B78859A5E43F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197516759040:nk]'>
            <groupfilter function='member' level='[none:Calculation_577305197516759040:nk]' member='&quot;Top 25 Batting Averages&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0798afo1f5hh77105ib69168v5ty].[sum:weight:ok]'>
            <groupfilter function='level-members' level='[sum:weight:ok]' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0798afo1f5hh77105ib69168v5ty].[sum:weight:ok]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0798afo1f5hh77105ib69168v5ty].[sum:weight:ok]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197516759040:nk]</column>
            <column>[federated.0798afo1f5hh77105ib69168v5ty].[sum:weight:ok]</column>
            <column>[federated.0798afo1f5hh77105ib69168v5ty].[Action (Names, Top 10)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='cols' value='#d37295' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0798afo1f5hh77105ib69168v5ty].[sum:weight:ok]' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0798afo1f5hh77105ib69168v5ty].[sum:weight:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2.1988949775695801' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0798afo1f5hh77105ib69168v5ty].[sum:weight:ok]</rows>
        <cols>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197519740929:nk]</cols>
        <show-full-range>
          <column>[federated.0798afo1f5hh77105ib69168v5ty].[none:HR (bin):qk]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{4416908B-1BE3-4EAE-B011-DB28CA19D7E2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='A Baseball Story' type='storyboard'>
      <style>
        <style-rule element='story-description'>
          <format attr='font-style' id='story-description_7' value='normal' />
          <format attr='font-weight' id='story-description_7' value='normal' />
          <format attr='text-decoration' id='story-description_7' value='none' />
          <format attr='border-width' id='story-description_7' value='0' />
          <format attr='border-style' id='story-description_7' value='none' />
          <format attr='background-color' id='story-description_7' value='#fffef500' />
          <format attr='background-color' id='story-description_6' value='#fffef500' />
          <format attr='border-width' id='story-description_6' value='0' />
          <format attr='border-style' id='story-description_6' value='none' />
          <format attr='border-width' id='story-description_8' value='0' />
          <format attr='background-color' id='story-description_8' value='#fffef500' />
          <format attr='border-style' id='story-description_8' value='none' />
          <format attr='font-style' id='story-description_8' value='normal' />
          <format attr='font-weight' id='story-description_8' value='normal' />
          <format attr='text-decoration' id='story-description_8' value='none' />
          <format attr='border-width' id='story-description_9' value='0' />
          <format attr='background-color' id='story-description_9' value='#fffef500' />
          <format attr='border-style' id='story-description_9' value='none' />
          <format attr='font-style' id='story-description_9' value='normal' />
          <format attr='font-weight' id='story-description_9' value='normal' />
          <format attr='text-decoration' id='story-description_9' value='none' />
          <format attr='border-width' id='story-description_10' value='0' />
          <format attr='background-color' id='story-description_10' value='#fffef500' />
          <format attr='border-style' id='story-description_10' value='none' />
          <format attr='font-style' id='story-description_10' value='normal' />
          <format attr='font-weight' id='story-description_10' value='normal' />
          <format attr='text-decoration' id='story-description_10' value='none' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='83506' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='15664'>
              <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Dataset choice.' captured-sheet='Top 10 Batting Average Players' id='1' />
                  <story-point caption='Handedness&#9; &amp; Batting Average' captured-sheet='Handedness Among Top 10 Batting Average Players' id='3' />
                  <story-point caption='Height &amp; Batting Average' captured-sheet='Height Among Top 10 Batting Average Players' id='4' />
                  <story-point caption='Weight &amp; Batting Average' captured-sheet='Weight Among Top 10 Batting Average Players' id='5' />
                  <story-point caption='Dashboard' captured-sheet='Dashboard 1' id='6'>
                    <capturedDeltas>
                      <worksheet name='Handedness Among Top 10 Batting Average Players'>
                        <filter class='categorical' column='[federated.0798afo1f5hh77105ib69168v5ty].[Action (Height in Feet,Subset Labels,Names, Top 10)]'>
                          <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[Calculation_1047368407190814724]' />
                            <groupfilter function='level-members' level='[Calculation_577305197516759040]' />
                            <groupfilter function='level-members' level='[Calculation_577305197519740929]' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.0798afo1f5hh77105ib69168v5ty].[Action (Names, Top 10)]'>
                          <groupfilter function='level-members' level='[Calculation_577305197519740929]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Height Among Top 10 Batting Average Players'>
                        <selection-collection />
                      </worksheet>
                      <worksheet name='Top 10 Batting Average Players'>
                        <filter class='categorical' column='[federated.0798afo1f5hh77105ib69168v5ty].[Action (Height in Feet,Subset Labels,Names, Top 10)]'>
                          <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[Calculation_1047368407190814724]' />
                            <groupfilter function='level-members' level='[Calculation_577305197516759040]' />
                            <groupfilter function='level-members' level='[Calculation_577305197519740929]' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197516759040:nk]'>
                          <groupfilter function='level-members' level='[none:Calculation_577305197516759040:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Weight Among Top 10 Batting Average Players'>
                        <filter class='categorical' column='[federated.0798afo1f5hh77105ib69168v5ty].[Action (Height in Feet,Subset Labels,Names, Top 10)]'>
                          <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[Calculation_1047368407190814724]' />
                            <groupfilter function='level-members' level='[Calculation_577305197516759040]' />
                            <groupfilter function='level-members' level='[Calculation_577305197519740929]' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.0798afo1f5hh77105ib69168v5ty].[Action (Names, Top 10,Handedness)]'>
                          <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[Calculation_577305197519740929]' />
                            <groupfilter function='level-members' level='[handedness]' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197516759040:nk]'>
                          <groupfilter function='level-members' level='[none:Calculation_577305197516759040:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='21680' hidden='true' id='6' story-point-id='1' type-v2='text' w='40945' x='30020' y='16079'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book'>I chose to examine the baseball dataset. I wanted to focus on the players with the top 10 highest batting averages. Does handedness, height or weight affect batting averages?</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='18257' hidden='true' id='7' story-point-id='3' type-v2='text' w='33268' x='44094' y='16701'>
          <formatted-text>
            <run fontcolor='#000000'>The majority of players in the top 10 batting average range are left handed. Only 1 player is both right and left handed.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='34751' hidden='true' id='8' story-point-id='4' type-v2='text' w='24114' x='72933' y='24585'>
          <formatted-text>
            <run fontcolor='#000000'>The heights of the players with the top 10 batting averages are varied. There appears to be no correlation between height and the batting averages. </run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='23963' hidden='true' id='9' story-point-id='5' type-v2='text' w='57480' x='7283' y='44087'>
          <formatted-text>
            <run fontcolor='#000000'>The weights of the players with the top 10 batting averages are varied. There appears to be no correlation between weight and the batting averages. </run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{F04E1183-2D1A-4523-AA62-107B61545628}' />
    </dashboard>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='19' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='17' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='9' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='7' type-v2='layout-basic' w='33900' x='800' y='1000'>
                  <zone h='98000' id='3' name='Top 10 Batting Average Players' w='33900' x='800' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='645' h='98000' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='64500' x='34700' y='1000'>
                  <zone fixed-size='286' h='36750' id='12' is-fixed='true' name='Height Among Top 10 Batting Average Players' w='64500' x='34700' y='1000'>
                    <layout-cache cell-count-w='10' minheight='246' non-cell-size-w='64' type-h='scalable' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='223' h='28875' id='6' is-fixed='true' name='Weight Among Top 10 Batting Average Players' w='64500' x='34700' y='37750'>
                    <layout-cache cell-count-w='10' non-cell-size-w='81' type-h='cell' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='32375' id='15' name='Handedness Among Top 10 Batting Average Players' w='64500' x='34700' y='66625'>
                    <layout-cache cell-count-h='1' cell-count-w='1' non-cell-size-h='50' type-h='cell' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='30' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Top 10 Batting Average Players' w='33900' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36750' id='12' is-fixed='true' name='Height Among Top 10 Batting Average Players' w='64500' x='34700' y='1000'>
                  <layout-cache cell-count-w='10' minheight='246' non-cell-size-w='64' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='223' h='28875' id='6' is-fixed='true' name='Weight Among Top 10 Batting Average Players' w='64500' x='34700' y='37750'>
                  <layout-cache cell-count-w='10' non-cell-size-w='81' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='251' h='32375' id='15' is-fixed='true' name='Handedness Among Top 10 Batting Average Players' w='64500' x='34700' y='66625'>
                  <layout-cache cell-count-h='1' cell-count-w='1' non-cell-size-h='50' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3E3E656B-1219-48DD-BD36-33E70D935EC9}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Top 10 Batting Average Players'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[:Measure Names]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[cnt:avg:qk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[ctd:name:qk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[io:Top 25 by Batting Average:nk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197516759040:nk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197519740929:nk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:HR (bin):qk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:handedness:nk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0BFEAF1D-8F8B-4221-A9AA-2EAEB96928CB}' />
    </window>
    <window class='worksheet' name='Handedness Among Top 10 Batting Average Players'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0798afo1f5hh77105ib69168v5ty].[none:handedness:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[:Measure Names]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[avg:HR:qk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[io:Top 25 by Batting Average:nk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_1047368407190814724:ok]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197516759040:nk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197519740929:nk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:HR (bin):qk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:handedness:nk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A59E3DAB-E76F-4F50-8203-0EC6511500EC}' />
    </window>
    <window class='worksheet' name='Height Among Top 10 Batting Average Players'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='32'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197516759040:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[avg:HR:qk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[cnt:HR:qk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[ctd:HR:ok]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[io:Top 25 by Batting Average:nk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_1047368407190814724:ok]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_1047368407190814724:qk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197516759040:nk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:HR (bin):qk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:name:nk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:weight:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2B2BB204-474C-4577-9A78-7E40F8A30A7D}' />
    </window>
    <window class='worksheet' name='Weight Among Top 10 Batting Average Players'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='32'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[cnt:HR:qk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[ctd:HR:ok]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[ctd:weight:qk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_1047368407190814724:ok]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_1047368407205142533:ok]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197516759040:nk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:Calculation_577305197519740929:nk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:HR (bin):qk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:name:nk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:weight:ok]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[none:weight:qk]</field>
            <field>[federated.0798afo1f5hh77105ib69168v5ty].[sum:weight:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{22F35D5E-FE3F-4781-BB51-8A66E72B89C4}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Handedness Among Top 10 Batting Average Players'>
          <zoom type='entire-view' />
          <highlight field='[federated.0798afo1f5hh77105ib69168v5ty].[io:Top 25 by Batting Average:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Height Among Top 10 Batting Average Players'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 Batting Average Players'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Weight Among Top 10 Batting Average Players'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A1738017-E336-44F7-B4C9-7AC4D8753225}' />
    </window>
    <window class='dashboard' name='A Baseball Story'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{BB7FADD8-FF8A-4102-B2DF-6EE4B3E8A43C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='A Baseball Story' width='192'>
      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
      +nfu9CP5HwygfT0f2gjZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Handedness Among Top 10 Batting Average Players' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Height Among Top 10 Batting Average Players' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Batting Average Players' width='184'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weight Among Top 10 Batting Average Players' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
